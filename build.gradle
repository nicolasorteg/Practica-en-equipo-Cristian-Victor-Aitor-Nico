plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '2.1.0'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.25.0'
    //doc con dokka
    id "org.jetbrains.dokka" version "1.9.20"
    //serialization
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.23'
}

group ''
version ''

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'practicaenequipocristianvictoraitornico'
    mainClass = 'practicaenequipocristianvictoraitornico.MainApp'
}
kotlin {
    jvmToolchain(21)
}

javafx {
    version = '21'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    //libreria de drivers de base de datos H2
    implementation("com.h2database:h2:2.3.232")
    //jdbi libraries
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("org.jdbi:jdbi3-core:3.48.0")
    implementation("org.jdbi:jdbi3-sqlobject:3.48.0")
    implementation("org.jdbi:jdbi3-kotlin:3.48.0")
    implementation("org.jdbi:jdbi3-kotlin-sqlobject:3.48.0")
    implementation("org.jetbrains.kotlin:kotlin-stdlib")
    // librerías para el logger
    implementation("org.lighthousegames:logging:1.5.0")
    implementation("ch.qos.logback:logback-classic:1.5.12")
    // librerías para la lectura de datos JSON
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.8.0")
    // librerias para lectura de datos XML
    implementation("io.github.pdvrieze.xmlutil:serialization-jvm:0.90.3")
    // mockito
    testImplementation("org.mockito:mockito-junit-jupiter:5.12.0")
    testImplementation("org.mockito.kotlin:mockito-kotlin:5.3.1")
    // test normales
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    //caffeine cache
    implementation("com.github.ben-manes.caffeine:caffeine:3.2.0")
    //Result exeptions
    implementation("com.michael-bull.kotlin-result:kotlin-result:2.0.0")
    // Open Brwoser
    implementation("com.vaadin:open:8.5.0")
    //BCrypt
    implementation("org.mindrot:jbcrypt:0.4")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}
jar {
    manifest {
        attributes 'Main-Class': 'practicaenequipocristianvictoraitornico.main'
    }
    from {
        configurations["compileClasspath"].collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}
